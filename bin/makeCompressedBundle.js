'use strict';var e=require("@babel/runtime/helpers/interopRequireDefault")(require("@babel/runtime/helpers/slicedToArray"));try{var o=require('commander'),r=require('./config/common'),i=r.project_dir,n=r.SDK_VERSION,t=r.execNode,a=r.parsePackageNameArg,s=require('path'),c=require('fs'),l=require("pump"),p=require('compressing');o.version("version:"+n).usage("<packagePath>").option("-t, --target [dir]","\u8f93\u51fa\u7684\u76ee\u6807\u6587\u4ef6\u5939","").description("\u751f\u6210Bundle").parse(process.argv),(o.args||[]).length<1&&(o.outputHelp(),process.exit(1001)),console.log('makebundle'),(function(){var r=s.join(i,"node_modules");if(!c.existsSync(r)||!c.existsSync(s.join(i,"package-lock.json"))||!c.statSync(r).isDirectory())return console.log("please run `npm install` to install the libs at first"),void process.exit(1002);var n=a(o.args[0]),d=(0,e.default)(n,2),u=d[0],g=(d[1],!(!o.target||!o.target.length)&&o.target),m=s.join(i,"projects",u,"build"),f=s.join(g||m,"release");function h(e){var o=e.endsWith(".zip")?e:e+".zip";console.log("Ready to compress package file:");var r=new p.zip.Stream;c.existsSync(e)?(r.addEntry(e),console.log("finish add compressing"),l(r,c.createWriteStream(o),function(e){e&&console.log("failed to compress local bundle",e),e||(console.log("Local package is generated:"),console.log(o))})):console.log("build path not exist")}var j,v=s.join(f,"ios"),b=s.join(f,"android");(j=s.join(__dirname,"buildLocalBundle.js"),t.apply(void 0,[j,"--android"].concat(["--target",s.join(f,"android"),u])).then(function(e){return t.apply(void 0,[j,"--ios"].concat(["--target",s.join(f,"ios"),u]))}).catch(function(e){console.log("failed to make bundles ",e),process.exit(e)})).then(function(e){h(b),h(v)})})()}catch(e){console.log(e),process.exit(1e3)}